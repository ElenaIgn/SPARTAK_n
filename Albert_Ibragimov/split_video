import cv2
import os
import time


# Пример использования функции extract_frames
video_path = "./Desktop/DJI_0002_(1).MP4"
output_dir = "./Desktop/AI/my_big_dir_img"
step = 1  # Шаг в секундах

def extract_frames(video_path, output_dir, step=10):
    # Делаем выходную директорию, если она не существует

    start_time = time.time()  # Замеряем начальное время выполнения


    # проверяем, существует ли указанная выходная директория.
    if not os.path.exists(output_dir):

        # Если выходная директория не существует, то делаем её:
        os.makedirs(output_dir)

    # Загружаем видео по указанному пути:
    video = cv2.VideoCapture(video_path)

    # это переменная-счетчик, которая используется
    # для отслеживания количества извлеченных кадров.
    frame_count = 1

    # это флаг, который указывает, успешно ли был прочитан текущий кадр.
    # При значении True цикл продолжается.
    success = True

    # Читаем кадры из видео, пока они читаются успешно
    while success:

        # Читаем ледующий кадр из видео и сохраняет его в переменную frame.
        # Если чтение прошло успешно, то success будет равен True.
        success, frame = video.read()



        # Отладочный вывод
        #print(f"success: {success}, frame: {frame}")




        # Проверяем, прошло ли достаточно времени для извлечения следующего кадра.
        # Если да, то сохраняем текущий кадр в файл.
        if frame_count % step == 0:

            # Проверяем, что кадр не пустой
            if frame is not None:

                # Сохраняем извлеченный кадр в файл
                # Формируем путь для сохранения текущего кадра в виде файла JPEG.
                frame_path = os.path.join(output_dir, f"frame_{frame_count}.jpg")

                # Сохраняем текущий кадр в файл по указанному пути.
                cv2.imwrite(frame_path, frame)


                # Увеличиваем счетчик кадров
                frame_count += 1

            else:
                print("Кадр пустой. Пропускаем сохранение.")
       

    # Освобождаем ресурсы
    video.release()

    print(f"Количество сохраненных картинок: {frame_count}")

    end_time = time.time()  # Замеряем конечное время выполнения
    execution_time = end_time - start_time  # Вычисляем время выполнения

    minutes = int(execution_time // 60)  # Вычисляем количество минут
    seconds = int(execution_time % 60)  # Вычисляем количество секунд
    print(f"Время выполнения: {minutes} минут {seconds} секунд")


extract_frames(video_path, output_dir, step)
